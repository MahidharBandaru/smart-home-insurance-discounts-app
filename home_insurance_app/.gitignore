# Miscellaneous
*.class
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/

# The .vscode folder contains launch configuration and tasks you configure in
# VS Code which you may wish to be included in version control, so this line
# is commented out by default.
#.vscode/

# Flutter/Dart/Pub related
**/doc/api/
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.packages
.pub-cache/
.pub/
/build/

# Web related
lib/generated_plugin_registrant.dart

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json

# Exceptions to above rules.
!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages
 final String url =
        "https://nestservices.google.com/partnerconnections/akashag-step-interns-test/auth?redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&access_type=offline&prompt=consent&client_id=482460250779-uf3rlo2olotjn2cpciahp8fsa82d0p1k.apps.googleusercontent.com&response_type=code&scope=https://www.googleapis.com/auth/sdm.service";

    Uri.parse(url);
    const _clientId =
        "482460250779-uf3rlo2olotjn2cpciahp8fsa82d0p1k.apps.googleusercontent.com";
    const _clientSecret = "z2L_ju7XVxZyxBftCxpq7mT6";
    const _scopes = ["https://www.googleapis.com/auth/sdm.service"];
    var authClient = await clientViaUserConsent(
        ClientId(_clientId, _clientSecret), _scopes, (url) {
      launch(url);
    });

    String a = authClient.credentials.accessToken.data;
    print("Access Token");
    print(a);
    String data = await DefaultAssetBundle.of(context)
        .loadString("assets/Oauth.json");
    final jsonResult = json.decode(data);
    print(jsonResult);

    final String url2 =
        'https://staging-smartdevicemanagement.sandbox.googleapis.com/v1/enterprises/akashag-step-interns-test/structures';
    final client = new http.Client();
    final response = await client.post(
      url2,
      headers: {HttpHeaders.authorizationHeader: 'Bearer $a'},
    );
    final responseJson = json.decode(response.body);

    print(responseJson['error']);

